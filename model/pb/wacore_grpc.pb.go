// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: model/proto/wacore.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	WaCoreGateway_GetClientContact_FullMethodName = "/helloworld.WaCoreGateway/GetClientContact"
)

// WaCoreGatewayClient is the client API for WaCoreGateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WaCoreGatewayClient interface {
	GetClientContact(ctx context.Context, in *ContactRequest, opts ...grpc.CallOption) (*ContactResponse, error)
}

type waCoreGatewayClient struct {
	cc grpc.ClientConnInterface
}

func NewWaCoreGatewayClient(cc grpc.ClientConnInterface) WaCoreGatewayClient {
	return &waCoreGatewayClient{cc}
}

func (c *waCoreGatewayClient) GetClientContact(ctx context.Context, in *ContactRequest, opts ...grpc.CallOption) (*ContactResponse, error) {
	out := new(ContactResponse)
	err := c.cc.Invoke(ctx, WaCoreGateway_GetClientContact_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WaCoreGatewayServer is the server API for WaCoreGateway service.
// All implementations must embed UnimplementedWaCoreGatewayServer
// for forward compatibility
type WaCoreGatewayServer interface {
	GetClientContact(context.Context, *ContactRequest) (*ContactResponse, error)
	mustEmbedUnimplementedWaCoreGatewayServer()
}

// UnimplementedWaCoreGatewayServer must be embedded to have forward compatible implementations.
type UnimplementedWaCoreGatewayServer struct {
}

func (UnimplementedWaCoreGatewayServer) GetClientContact(context.Context, *ContactRequest) (*ContactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClientContact not implemented")
}
func (UnimplementedWaCoreGatewayServer) mustEmbedUnimplementedWaCoreGatewayServer() {}

// UnsafeWaCoreGatewayServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WaCoreGatewayServer will
// result in compilation errors.
type UnsafeWaCoreGatewayServer interface {
	mustEmbedUnimplementedWaCoreGatewayServer()
}

func RegisterWaCoreGatewayServer(s grpc.ServiceRegistrar, srv WaCoreGatewayServer) {
	s.RegisterService(&WaCoreGateway_ServiceDesc, srv)
}

func _WaCoreGateway_GetClientContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WaCoreGatewayServer).GetClientContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: WaCoreGateway_GetClientContact_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WaCoreGatewayServer).GetClientContact(ctx, req.(*ContactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// WaCoreGateway_ServiceDesc is the grpc.ServiceDesc for WaCoreGateway service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var WaCoreGateway_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.WaCoreGateway",
	HandlerType: (*WaCoreGatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetClientContact",
			Handler:    _WaCoreGateway_GetClientContact_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "model/proto/wacore.proto",
}
